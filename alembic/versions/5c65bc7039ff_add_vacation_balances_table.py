"""add vacation_balances table

Revision ID: 5c65bc7039ff
Revises: 6a0d8f5800de
Create Date: 2025-09-22 19:01:21.882497

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5c65bc7039ff'
down_revision = '6a0d8f5800de'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('vacation_balances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('worker_id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('total_days', sa.Integer(), nullable=False),
    sa.Column('used_days', sa.Integer(), nullable=False),
    sa.Column('pending_days', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['worker_id'], ['workers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vacation_balances_id'), 'vacation_balances', ['id'], unique=False)
    op.create_index(op.f('ix_vacation_balances_worker_id'), 'vacation_balances', ['worker_id'], unique=True)
    op.create_index(op.f('ix_vacation_balances_year'), 'vacation_balances', ['year'], unique=False)
    op.create_table('worker_vacations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('worker_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('days', sa.Integer(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', 'CANCELLED', name='vacationstatus'), nullable=False),
    sa.Column('request_date', sa.DateTime(), nullable=False),
    sa.Column('requested_by', sa.Integer(), nullable=False),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('approved_date', sa.DateTime(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['requested_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['worker_id'], ['workers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_worker_vacations_end_date'), 'worker_vacations', ['end_date'], unique=False)
    op.create_index(op.f('ix_worker_vacations_id'), 'worker_vacations', ['id'], unique=False)
    op.create_index(op.f('ix_worker_vacations_start_date'), 'worker_vacations', ['start_date'], unique=False)
    op.create_index(op.f('ix_worker_vacations_status'), 'worker_vacations', ['status'], unique=False)
    op.create_index(op.f('ix_worker_vacations_worker_id'), 'worker_vacations', ['worker_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_worker_vacations_worker_id'), table_name='worker_vacations')
    op.drop_index(op.f('ix_worker_vacations_status'), table_name='worker_vacations')
    op.drop_index(op.f('ix_worker_vacations_start_date'), table_name='worker_vacations')
    op.drop_index(op.f('ix_worker_vacations_id'), table_name='worker_vacations')
    op.drop_index(op.f('ix_worker_vacations_end_date'), table_name='worker_vacations')
    op.drop_table('worker_vacations')
    op.drop_index(op.f('ix_vacation_balances_year'), table_name='vacation_balances')
    op.drop_index(op.f('ix_vacation_balances_worker_id'), table_name='vacation_balances')
    op.drop_index(op.f('ix_vacation_balances_id'), table_name='vacation_balances')
    op.drop_table('vacation_balances')
    # ### end Alembic commands ###