"""Add candidate voting models

Revision ID: d41b1ce2e9a0
Revises: cafe2465b142
Create Date: 2025-09-24 22:58:31.091211

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd41b1ce2e9a0'
down_revision = 'cafe2465b142'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('candidate_votings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=300), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('committee_type', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('max_votes_per_user', sa.Integer(), nullable=False),
    sa.Column('is_secret', sa.Boolean(), nullable=False),
    sa.Column('allow_multiple_candidates', sa.Boolean(), nullable=False),
    sa.Column('winner_count', sa.Integer(), nullable=False),
    sa.Column('results_summary', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.CheckConstraint('end_date > start_date', name='check_end_after_start_candidate_voting'),
    sa.CheckConstraint('max_votes_per_user > 0', name='check_positive_max_votes'),
    sa.CheckConstraint('winner_count > 0', name='check_positive_winner_count'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_candidate_voting_dates', 'candidate_votings', ['start_date', 'end_date'], unique=False)
    op.create_index('idx_candidate_voting_status', 'candidate_votings', ['status'], unique=False)
    op.create_index('idx_candidate_voting_type', 'candidate_votings', ['committee_type'], unique=False)
    op.create_index(op.f('ix_candidate_votings_id'), 'candidate_votings', ['id'], unique=False)
    op.create_table('candidate_voting_candidates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('voting_id', sa.Integer(), nullable=False),
    sa.Column('worker_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['voting_id'], ['candidate_votings.id'], ),
    sa.ForeignKeyConstraint(['worker_id'], ['workers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_voting_candidate', 'candidate_voting_candidates', ['voting_id', 'worker_id'], unique=False)
    op.create_index(op.f('ix_candidate_voting_candidates_id'), 'candidate_voting_candidates', ['id'], unique=False)
    op.create_table('candidate_votes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('voting_id', sa.Integer(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=False),
    sa.Column('voter_id', sa.Integer(), nullable=False),
    sa.Column('vote_date', sa.DateTime(), nullable=False),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidate_voting_candidates.id'], ),
    sa.ForeignKeyConstraint(['voter_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['voting_id'], ['candidate_votings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_unique_vote_per_candidate', 'candidate_votes', ['voting_id', 'candidate_id', 'voter_id'], unique=True)
    op.create_index('idx_voting_voter', 'candidate_votes', ['voting_id', 'voter_id'], unique=False)
    op.create_index(op.f('ix_candidate_votes_id'), 'candidate_votes', ['id'], unique=False)
    op.create_table('candidate_voting_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('voting_id', sa.Integer(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=False),
    sa.Column('total_votes', sa.Integer(), nullable=False),
    sa.Column('percentage', sa.String(length=10), nullable=True),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('is_winner', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidate_voting_candidates.id'], ),
    sa.ForeignKeyConstraint(['voting_id'], ['candidate_votings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_voting_results', 'candidate_voting_results', ['voting_id', 'position'], unique=False)
    op.create_index(op.f('ix_candidate_voting_results_id'), 'candidate_voting_results', ['id'], unique=False)
    op.alter_column('committee_activities', 'priority',
               existing_type=postgresql.ENUM('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='activitypriorityenum'),
               type_=sa.String(length=20),
               existing_nullable=False)
    op.alter_column('committee_activities', 'status',
               existing_type=postgresql.ENUM('PENDING', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', 'OVERDUE', name='activitystatusenum'),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('committee_documents', 'document_type',
               existing_type=postgresql.ENUM('MEETING_MINUTES', 'REGULATION', 'REPORT', 'INVESTIGATION', 'PROCEDURE', 'FORM', 'CERTIFICATE', 'OTHER', name='documenttypeenum'),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('committee_meetings', 'status',
               existing_type=postgresql.ENUM('scheduled', 'in_progress', 'completed', 'cancelled', 'postponed', name='meetingstatusenum'),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.drop_index('idx_committee_role', table_name='committee_members')
    op.create_index('idx_committee_role', 'committee_members', ['committee_id', 'role_id'], unique=False)
    op.add_column('committee_votes', sa.Column('vote_value', sa.String(length=20), nullable=False))
    op.drop_column('committee_votes', 'vote_choice')
    op.alter_column('committee_votings', 'status',
               existing_type=postgresql.ENUM('DRAFT', 'ACTIVE', 'CLOSED', 'CANCELLED', name='votingstatusenum'),
               type_=sa.String(length=50),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('committee_votings', 'status',
               existing_type=sa.String(length=50),
               type_=postgresql.ENUM('DRAFT', 'ACTIVE', 'CLOSED', 'CANCELLED', name='votingstatusenum'),
               existing_nullable=False)
    op.add_column('committee_votes', sa.Column('vote_choice', postgresql.ENUM('YES', 'NO', 'ABSTAIN', name='votechoiceenum'), autoincrement=False, nullable=False))
    op.drop_column('committee_votes', 'vote_value')
    op.drop_index('idx_committee_role', table_name='committee_members')
    op.create_index('idx_committee_role', 'committee_members', ['committee_id', 'role'], unique=False)
    op.alter_column('committee_meetings', 'status',
               existing_type=sa.String(length=50),
               type_=postgresql.ENUM('scheduled', 'in_progress', 'completed', 'cancelled', 'postponed', name='meetingstatusenum'),
               existing_nullable=False)
    op.alter_column('committee_documents', 'document_type',
               existing_type=sa.String(length=50),
               type_=postgresql.ENUM('MEETING_MINUTES', 'REGULATION', 'REPORT', 'INVESTIGATION', 'PROCEDURE', 'FORM', 'CERTIFICATE', 'OTHER', name='documenttypeenum'),
               existing_nullable=False)
    op.alter_column('committee_activities', 'status',
               existing_type=sa.String(length=50),
               type_=postgresql.ENUM('PENDING', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', 'OVERDUE', name='activitystatusenum'),
               existing_nullable=False)
    op.alter_column('committee_activities', 'priority',
               existing_type=sa.String(length=20),
               type_=postgresql.ENUM('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='activitypriorityenum'),
               existing_nullable=False)
    op.drop_index(op.f('ix_candidate_voting_results_id'), table_name='candidate_voting_results')
    op.drop_index('idx_voting_results', table_name='candidate_voting_results')
    op.drop_table('candidate_voting_results')
    op.drop_index(op.f('ix_candidate_votes_id'), table_name='candidate_votes')
    op.drop_index('idx_voting_voter', table_name='candidate_votes')
    op.drop_index('idx_unique_vote_per_candidate', table_name='candidate_votes')
    op.drop_table('candidate_votes')
    op.drop_index(op.f('ix_candidate_voting_candidates_id'), table_name='candidate_voting_candidates')
    op.drop_index('idx_voting_candidate', table_name='candidate_voting_candidates')
    op.drop_table('candidate_voting_candidates')
    op.drop_index(op.f('ix_candidate_votings_id'), table_name='candidate_votings')
    op.drop_index('idx_candidate_voting_type', table_name='candidate_votings')
    op.drop_index('idx_candidate_voting_status', table_name='candidate_votings')
    op.drop_index('idx_candidate_voting_dates', table_name='candidate_votings')
    op.drop_table('candidate_votings')
    # ### end Alembic commands ###