"""add_suppliers_and_doctors_tables

Revision ID: 37c7da4a4683
Revises: fe52450538d1
Create Date: 2025-09-03 19:22:30.608729

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '37c7da4a4683'
down_revision = 'fe52450538d1'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('suppliers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('nit', sa.String(length=50), nullable=False),
    sa.Column('supplier_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('website', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('observations', sa.Text(), nullable=True),
    sa.Column('health_registration', sa.String(length=100), nullable=True),
    sa.Column('accreditation', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_suppliers_email'), 'suppliers', ['email'], unique=False)
    op.create_index(op.f('ix_suppliers_id'), 'suppliers', ['id'], unique=False)
    op.create_index(op.f('ix_suppliers_name'), 'suppliers', ['name'], unique=False)
    op.create_index(op.f('ix_suppliers_nit'), 'suppliers', ['nit'], unique=True)
    op.create_table('doctors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('document_number', sa.String(length=50), nullable=False),
    sa.Column('medical_license', sa.String(length=50), nullable=False),
    sa.Column('specialty', sa.String(length=100), nullable=True),
    sa.Column('sub_specialty', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('years_experience', sa.Integer(), nullable=True),
    sa.Column('observations', sa.Text(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_doctors_document_number'), 'doctors', ['document_number'], unique=True)
    op.create_index(op.f('ix_doctors_email'), 'doctors', ['email'], unique=False)
    op.create_index(op.f('ix_doctors_id'), 'doctors', ['id'], unique=False)
    op.create_index(op.f('ix_doctors_medical_license'), 'doctors', ['medical_license'], unique=True)
    op.drop_index(op.f('ix_admin_config_category'), table_name='admin_config')
    op.drop_index(op.f('ix_admin_config_id'), table_name='admin_config')
    op.drop_table('admin_config')
    op.drop_index(op.f('ix_manual_exam_notifications_id'), table_name='manual_exam_notifications')
    op.drop_table('manual_exam_notifications')
    op.drop_index(op.f('ix_programas_id'), table_name='programas')
    op.drop_table('programas')
    op.add_column('occupational_exams', sa.Column('supplier_id', sa.Integer(), nullable=True))
    op.add_column('occupational_exams', sa.Column('doctor_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'occupational_exams', 'doctors', ['doctor_id'], ['id'])
    op.create_foreign_key(None, 'occupational_exams', 'suppliers', ['supplier_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'occupational_exams', type_='foreignkey')
    op.drop_constraint(None, 'occupational_exams', type_='foreignkey')
    op.drop_column('occupational_exams', 'doctor_id')
    op.drop_column('occupational_exams', 'supplier_id')
    op.create_table('programas',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nombre_programa', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('activo', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('programas_pkey'))
    )
    op.create_index(op.f('ix_programas_id'), 'programas', ['id'], unique=False)
    op.create_table('manual_exam_notifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('worker_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('occupational_exam_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('admin_user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('notification_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email_sent', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('email_address', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('reason', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('exam_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('exam_type', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('sent_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['admin_user_id'], ['users.id'], name=op.f('manual_exam_notifications_admin_user_id_fkey')),
    sa.ForeignKeyConstraint(['occupational_exam_id'], ['occupational_exams.id'], name=op.f('manual_exam_notifications_occupational_exam_id_fkey')),
    sa.ForeignKeyConstraint(['worker_id'], ['workers.id'], name=op.f('manual_exam_notifications_worker_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('manual_exam_notifications_pkey'))
    )
    op.create_index(op.f('ix_manual_exam_notifications_id'), 'manual_exam_notifications', ['id'], unique=False)
    op.create_table('admin_config',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('category', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('display_name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('emo_periodicity', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('admin_config_pkey'))
    )
    op.create_index(op.f('ix_admin_config_id'), 'admin_config', ['id'], unique=False)
    op.create_index(op.f('ix_admin_config_category'), 'admin_config', ['category'], unique=False)
    op.drop_index(op.f('ix_doctors_medical_license'), table_name='doctors')
    op.drop_index(op.f('ix_doctors_id'), table_name='doctors')
    op.drop_index(op.f('ix_doctors_email'), table_name='doctors')
    op.drop_index(op.f('ix_doctors_document_number'), table_name='doctors')
    op.drop_table('doctors')
    op.drop_index(op.f('ix_suppliers_nit'), table_name='suppliers')
    op.drop_index(op.f('ix_suppliers_name'), table_name='suppliers')
    op.drop_index(op.f('ix_suppliers_id'), table_name='suppliers')
    op.drop_index(op.f('ix_suppliers_email'), table_name='suppliers')
    op.drop_table('suppliers')
    # ### end Alembic commands ###